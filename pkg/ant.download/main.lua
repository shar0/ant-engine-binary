local ltask = require "ltask"

local download = ltask.uniqueservice "ant.download|download"

local M = {}

function M.start(url, filename)
	return ltask.call(download, "start", url, filename)
end

function M.cancel(id)
end

local status_code = {
	"FINDINGRESOURCE",
	"CONNECTING",
	"REDIRECTING",
	"BEGINDOWNLOADDATA",
	"DOWNLOADINGDATA",
	"ENDDOWNLOADDATA",
	"BEGINDOWNLOADCOMPONENTS",
	"INSTALLINGCOMPONENTS",
	"ENDDOWNLOADCOMPONENTS",
	"USINGCACHEDCOPY",
	"SENDINGREQUEST",
	"CLASSIDAVAILABLE",
	"MIMETYPEAVAILABLE",
	"CACHEFILENAMEAVAILABLE",
	"BEGINSYNCOPERATION",
	"ENDSYNCOPERATION",
	"BEGINUPLOADDATA",
	"UPLOADINGDATA",
	"ENDUPLOADDATA",
	"PROTOCOLCLASSID",
	"ENCODING",
	"VERIFIEDMIMETYPEAVAILABLE",
	"CLASSINSTALLLOCATION",
	"DECODING",
	"LOADINGMIMEHANDLER",
	"CONTENTDISPOSITIONATTACH",
	"FILTERREPORTMIMETYPE",
	"CLSIDCANINSTANTIATE",
	"IUNKNOWNAVAILABLE",
	"DIRECTBIND",
	"RAWMIMETYPE",
	"PROXYDETECTING",
	"ACCEPTRANGES",
	"COOKIE_SENT",
	"COMPACT_POLICY_RECEIVED",
	"COOKIE_SUPPRESSED",
	"COOKIE_STATE_UNKNOWN",
	"COOKIE_STATE_ACCEPT",
	"COOKIE_STATE_REJECT",
	"COOKIE_STATE_PROMPT",
	"COOKIE_STATE_LEASH",
	"COOKIE_STATE_DOWNGRADE",
	"POLICY_HREF",
	"P3P_HEADER",
	"SESSION_COOKIE_RECEIVED",
	"PERSISTENT_COOKIE_RECEIVED",
	"SESSION_COOKIES_ALLOWED",
	"CACHECONTROL",
	"CONTENTDISPOSITIONFILENAME",
	"MIMETEXTPLAINMISMATCH",
	"PUBLISHERAVAILABLE",
	"DISPLAYNAMEAVAILABLE",
	"SSLUX_NAVBLOCKED",
	"SERVER_MIMETYPEAVAILABLE",
	"SNIFFED_CLASSIDAVAILABLE",
}

function M.progress(id)
	local status, p, m = ltask.call(download, "progress", id)
	if status == true or status == false then
		return status
	else
		return status_code[status] or "UNKNOWN", p, m
	end
end

return M
